{
  "pieces" : {
    "base" : {
      "textureSize" : [8, 8],
      "texturePosition" : [9, 9],
      "colorStride" : [0, 26],
      "variantStride" : [26, 0]
    },
    "diagNE" : {
      "textureSize" : [8, 8],
      "texturePosition" : [17, 1],
      "colorStride" : [0, 26],
      "variantStride" : [26, 0]
    },
    "diagNW" : {
      "textureSize" : [8, 8],
      "texturePosition" : [1, 1],
      "colorStride" : [0, 26],
      "variantStride" : [26, 0]
    },
    "diagSE" : {
      "textureSize" : [8, 8],
      "texturePosition" : [17, 17],
      "colorStride" : [0, 26],
      "variantStride" : [26, 0]
    },
    "diagSW" : {
      "textureSize" : [8, 8],
      "texturePosition" : [1, 17],
      "colorStride" : [0, 26],
      "variantStride" : [26, 0]
    },//
    "edgeN" : {
      "textureSize" : [8, 8],
      "texturePosition" : [0, 9],
      "colorStride" : [0, 26],
      "variantStride" : [26, 0]
    },
    "edgeE" : {
      "textureSize" : [8, 8],
      "texturePosition" : [18, 9],
      "colorStride" : [0, 26],
      "variantStride" : [26, 0]
    },
    "edgeS" : {
      "textureSize" : [8, 8],
      "texturePosition" : [9, 18],
      "colorStride" : [0, 26],
      "variantStride" : [26, 0]
    },
    "edgeW" : {
      "textureSize" : [8, 8],
      "texturePosition" : [0, 9],
      "colorStride" : [0, 26],
      "variantStride" : [26, 0]
    }
  },

  "representativePiece": "base",

  "rules" : {
    "EqualsSelf" : {
      "entries" : [ { "type" : "EqualsSelf" } ]
    },
    "NotEqualsSelf" : {
      "entries" : [
        { "type" : "EqualsSelf", "inverse" : true }
      ]
    },
    "Connects" : {
      "entries" : [
        { "type" : "Connects" }
      ]
    },
    "Empty" : {
      "entries" : [
        { "type" : "Connects", "inverse" : true }
      ]
    },
    "ConnectsOther" : {
      "entries" : [
        { "type" : "Connects" },
        { "type" : "EqualsSelf", "inverse" : true }
      ]
    },
    "IsType" : {
      "join" : "any",
      "entries" : [
        { "type" : "EqualsId", "id" : 110 },
        { "type" : "EqualsId", "id" : 7183 },
        { "type" : "EqualsId", "id" : 7184 }
      ]
    },
    "NotType" : {
      "join" : "all",
      "entries" : [
        { "type" : "EqualsId", "id" : 110, "inverse" : true },
        { "type" : "EqualsId", "id" : 7183, "inverse" : true },
        { "type" : "EqualsId", "id" : 7184, "inverse" : true }
      ]
    }
  },


  "matches" : [
    ["main", [
      {
        "pieces" : [["base", [0, 0]]]
      },

      //my additions
      /*
      {
        "matchAllPoints" : [
          [[1, 0], "EqualsSelf"],
          [[0, 1], "EqualsSelf"],
          [[1, 1], "Empty"],
          [[2, 1], "NotEqualsSelf"],
          [[1, 2], "NotEqualsSelf"]
        ],
        "pieces" : [ ["diagNE", [8, 8] ] ]
        //"subMatches" : []
      },
      */
      
      
      {
        "matchAllPoints" : [
          [[1, 0], "Empty"],//target spot
          [[1, 1], "Empty"],
          [[1, -1], "Connects"],
          //[[1, -1], "NotType"],
          //[[1, 1], "NotType"],
          [[2, 0], "NotType"]
        ],
        "pieces" : [ ["diagNE", [8, 0] ] ]
      },
      
      /*
      /above slope?
      {
        "matchAllPoints" : [
          [[0, 1], "Empty"],//target spot
          [[1, 1], "Empty"],
          [[-1, 1], "Connects"],
          //[[1, -1], "NotType"],
          //[[1, 1], "NotType"],
          [[0, 2], "NotType"]
        ],
        "pieces" : [ ["diagNE", [0, 8] ] ]
      },
      */
      
      /*
      {
        "matchAllPoints" : [
          [[1, 0], "EqualsSelf"],
          [[0, -1], "EqualsSelf"],
          [[1, -1], "Empty"],
          [[2, -1], "NotEqualsSelf"],
          [[1, -2], "NotEqualsSelf"]
        ],
        "pieces" : [["diagSE", [8, -8]]]
      },
      */
      
      {
        "matchAllPoints" : [
          [[1, 0], "Empty"],//target spot
          [[1, -1], "Empty"],
          [[1, 1], "Connects"],
          //[[1, -1], "NotType"],
          //[[1, 1], "NotType"],
          [[2, 0], "NotType"]
        ],
        "pieces" : [ ["diagSE", [8, 0] ] ]
      },
      
      /*
      {
        "matchAllPoints" : [
          [[-1, 0], "EqualsSelf"],
          [[0, 1], "EqualsSelf"],
          [[-1, 1], "Empty"],
          [[-2, 1], "NotEqualsSelf"],
          [[-1, 2], "NotEqualsSelf"]
        ],
        "pieces" : [["diagNW", [-8, 8]]]
      },
      */
      
      {
        "matchAllPoints" : [
          [[-1, 0], "Empty"],//target spot
          [[-1, 1], "Empty"],
          [[-1, -1], "Connects"],
          //[[1, -1], "NotType"],
          //[[1, 1], "NotType"],
          [[-2, 0], "NotType"]
        ],
        "pieces" : [ ["diagNW", [-8, 0] ] ]
      },
      
      /*
      {
        "matchAllPoints" : [
          [[-1, 0], "EqualsSelf"],
          [[0, -1], "EqualsSelf"],
          [[-1, -1], "Empty"],
          [[-2, -1], "NotEqualsSelf"],
          [[-1, -2], "NotEqualsSelf"]
        ],
        "pieces" : [["diagSW", [-8, -8]]]
      }
      */
      
      {
        "matchAllPoints" : [
          [[-1, 0], "Empty"],//target spot
          [[-1, -1], "Empty"],
          [[-1, 1], "Connects"],
          //[[1, -1], "NotType"],
          //[[1, 1], "NotType"],
          [[-2, 0], "NotType"]
        ],
        "pieces" : [ ["diagSW", [-8, 0] ] ]
      }
      
      
      
      /*
      {
        "matchAllPoints" : [
          [[0, 1], "NotEqualsSelf"]
        ],
        "pieces" : [["edgeN", [0, 8]]]
        //"subMatches" : [ {} ]
        //"haltOnSubMatch" : true,
         
      },
      
      {
        "matchAllPoints" : [
          [[1, 0], "NotEqualsSelf"]
        ],
        "pieces" : [["edgeE", [8, 0]]]
      },
      {
        "matchAllPoints" : [
          [[0, -1], "NotEqualsSelf"]
        ],
        "pieces" : [["edgeS", [0, -8]]]
      },
      {
        "matchAllPoints" : [
          [[-1, 0], "NotEqualsSelf"]
        ],
        "pieces" : [["edgeW", [-8, 0]]]
      }
      */
    ]]
  ]
}
